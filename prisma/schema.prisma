datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//generator nexusPrisma {
//  provider = "nexus-prisma"
//}

// next-auth

model Account {
  id                 String  @id @default(cuid())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// users

model User {
  id String    @id @default(cuid())

  // next-auth
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // end next-auth

  role   Role? @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int?
}

// products

model Product {
  id   Int    @id @default(autoincrement())
  name String @unique

  pros String[]
  cons String[]
}

// permissions

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  users       User[]
  permissions Permission[]
}

enum Permission {
  ADMINISTRATOR
  EDIT_PRODUCTS
}
